con N : Int { N ≥ 1 }
con a : array [0..N) of Int
con inf : Int
var r, s, n : Int

let P x = x

r, s, n := 0-inf, 0 - inf, 0
{ r = s ∧ 0 ≤ n, bnd : N -n}
if P r = r -> [!
              
              !]
fi
{ True }

{-

    ⟨ ↑ i j : 0 ≤ i < j < n + 1 : a i - a j ⟩
 =  ↑ ⟨ ↑ i j : 0 ≤ i < j < n : a i - a j ⟩ (↑ ⟨ i : 0 ≤ i < n : a i - a n ⟩ )  

-}