### Result

([ [0] 
  True
  f   n   =  0
  Loop Invariant

, [1] 
  f   n   =  0 ∧ ¬  n   ≠   N
  True
  Loop Invariant

, [3] 
  f   n   =  0 ∧ n   ≠   N
  N   -   n  ≥ 0
  Loop Termination

, [2] 
  f   n   =  0 ∧ n   ≠   N
  f   (n   +  1)   =  0
  Assigment

, [4] 
  f   n   =  0 ∧ N   -   n  = ?m_0 ∧ n   ≠   N
  N   -   (n   +  1)  < ?m_0
  Assigment
 ], [ [0]
  f   n   =  0
  f   n   =  0
 ], [  ], [  ])

### Source

con N : Int
con f : array [0..N) of Int
var n : Int

{ f[n] = 0, bnd: N - n }
do n ≠ N -> n := n + 1
            [!
            
            !]
od 
{ True } 

### Trace

CmdLog " ### DigHole ./test/Test/Server/assets/spec-qm-5.gcl [113-114] 7:13-14"
CmdEditText ./test/Test/Server/assets/spec-qm-5.gcl [113-114] 7:13-14 "[!\n            \n            !]"
